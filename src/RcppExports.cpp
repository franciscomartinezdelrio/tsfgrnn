// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// regression_2
List regression_2(double sigma, NumericMatrix patterns, NumericMatrix targets, NumericVector example);
RcppExport SEXP _tsfgrnn_regression_2(SEXP sigmaSEXP, SEXP patternsSEXP, SEXP targetsSEXP, SEXP exampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type patterns(patternsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type targets(targetsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type example(exampleSEXP);
    rcpp_result_gen = Rcpp::wrap(regression_2(sigma, patterns, targets, example));
    return rcpp_result_gen;
END_RCPP
}
// build_examples2
List build_examples2(NumericVector timeS, NumericVector lags, int nt);
RcppExport SEXP _tsfgrnn_build_examples2(SEXP timeSSEXP, SEXP lagsSEXP, SEXP ntSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type timeS(timeSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< int >::type nt(ntSEXP);
    rcpp_result_gen = Rcpp::wrap(build_examples2(timeS, lags, nt));
    return rcpp_result_gen;
END_RCPP
}
// build_examples_m
List build_examples_m(NumericVector timeS, NumericVector lags, int nt);
RcppExport SEXP _tsfgrnn_build_examples_m(SEXP timeSSEXP, SEXP lagsSEXP, SEXP ntSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type timeS(timeSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< int >::type nt(ntSEXP);
    rcpp_result_gen = Rcpp::wrap(build_examples_m(timeS, lags, nt));
    return rcpp_result_gen;
END_RCPP
}
// build_examples_a
List build_examples_a(NumericVector timeS, NumericVector lags, int nt);
RcppExport SEXP _tsfgrnn_build_examples_a(SEXP timeSSEXP, SEXP lagsSEXP, SEXP ntSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type timeS(timeSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< int >::type nt(ntSEXP);
    rcpp_result_gen = Rcpp::wrap(build_examples_a(timeS, lags, nt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tsfgrnn_regression_2", (DL_FUNC) &_tsfgrnn_regression_2, 4},
    {"_tsfgrnn_build_examples2", (DL_FUNC) &_tsfgrnn_build_examples2, 3},
    {"_tsfgrnn_build_examples_m", (DL_FUNC) &_tsfgrnn_build_examples_m, 3},
    {"_tsfgrnn_build_examples_a", (DL_FUNC) &_tsfgrnn_build_examples_a, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_tsfgrnn(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
